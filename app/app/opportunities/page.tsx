
"use client";
import { useEffect, useMemo, useState } from "react";
type Signal={id:string;score:number;theme:string;title:string;publishedAt:string;region:string|null;entities:string[];rationale:string;sourceCount:number;link:string;};
export default function Page(){
  const [q,setQ]=useState(""),[theme,setTheme]=useState(""),[region,setRegion]=useState(""),[min,setMin]=useState(60),[signals,setSignals]=useState<Signal[]>([]),[loading,setLoading]=useState(false);
  useEffect(()=>{(async()=>{setLoading(true);const r=await fetch("/api/signals");const j=await r.json();setSignals(j.data);setLoading(false);})()},[]);
  const themes=useMemo(()=>Array.from(new Set(signals.map(s=>s.theme))).sort(),[signals]);
  const regions=useMemo(()=>Array.from(new Set(signals.map(s=>s.region??"Global"))).sort(),[signals]);
  const data=useMemo(()=>signals.filter(s=>s.score>=min&&(!theme||s.theme===theme)&&(!region||(s.region??"Global")===region)&&(q===""||[s.title,s.rationale,s.entities.join(" ")].join(" ").toLowerCase().includes(q.toLowerCase()))).sort((a,b)=>b.score-a.score),[q,theme,region,min,signals]);
  return (<div className="space-y-6"><header className="flex items-end justify-between gap-4"><div><h1 className="text-2xl font-semibold">Signals</h1><p className="text-sm text-gray-600">Ranked opportunities with explainable rationale.</p></div><div className="flex items-center gap-2"><input placeholder="Search…" value={q} onChange={e=>setQ(e.target.value)} className="w-72"/><select value={theme} onChange={e=>setTheme(e.target.value)}><option value="">Theme: All</option>{themes.map(t=><option key={t} value={t}>{t}</option>)}</select><select value={region} onChange={e=>setRegion(e.target.value)}><option value="">Region: All</option>{regions.map(r=><option key={r} value={r}>{r}</option>)}</select><label className="text-sm text-gray-600">Min score</label><input type="number" min={0} max={100} value={min} onChange={e=>setMin(Number(e.target.value))} className="w-20"/></div></header>{loading&&<div className="text-sm text-gray-500">Loading…</div>}<main className="grid gap-3">{data.map(s=>(<a key={s.id} href={s.link} target="_blank" className="card" rel="noreferrer"><div className="flex items-start justify-between"><div><h2 className="text-lg font-medium">{s.title}</h2><div className="mt-1 flex flex-wrap gap-2 text-xs"><span className="badge">{s.theme}</span><span className="badge">{s.region??"Global"}</span><span className="badge">{new Date(s.publishedAt).toLocaleString()}</span><span className="badge">{s.sourceCount} sources</span></div></div><div className="text-right"><div className="text-xs text-gray-500">Score</div><div className="text-2xl font-semibold">{Math.round(s.score)}</div></div></div><p className="mt-3 text-sm text-gray-700">{s.rationale}</p><div className="mt-3 flex flex-wrap gap-2">{s.entities.map(e=><span key={e} className="badge">{e}</span>)}</div></a>))}{(!loading&&data.length===0)&&(<div className="border rounded-xl p-8 text-center text-sm text-gray-500">No signals match your filters yet.</div>)}</main></div>);
}
