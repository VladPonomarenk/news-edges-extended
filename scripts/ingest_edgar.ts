
#!/usr/bin/env tsx
import { PrismaClient } from "@prisma/client"; import { XMLParser } from "fast-xml-parser";
const prisma=new PrismaClient(); const USER_AGENT=process.env.USER_AGENT||"news-edges/0.1 (contact: you@example.com)"; const FEED_URL="https://www.sec.gov/cgi-bin/browse-edgar?action=getcurrent&output=atom"; const FORMS=new Set(["8-K","10-K","6-K","20-F","10-Q","F-1","S-1"]);
async function fetchAtom(url:string){ const res=await fetch(url,{headers:{"user-agent":USER_AGENT,"accept":"application/atom+xml"}}); if(!res.ok) throw new Error(`EDGAR fetch failed: ${res.status}`); const xml=await res.text(); const parser=new XMLParser({ignoreAttributes:false}); return parser.parse(xml); }
function extractEntries(atom:any){ const feed=atom.feed||{}; let entries=feed.entry||[]; if(!Array.isArray(entries)) entries=[entries]; return entries; }
function parseTitleForForm(title:string):string|null{ const m=title?.match(/^([0-9A-Z-]+)\s+-/); return m?m[1]:null; }
async function main(){ const source=await prisma.source.upsert({ where:{url:FEED_URL}, update:{name:"SEC EDGAR (current)",type:"filing"}, create:{name:"SEC EDGAR (current)",url:FEED_URL,type:"filing"} }); const atom=await fetchAtom(FEED_URL); const entries=extractEntries(atom); for(const e of entries.slice(0,50)){ try{ const title=e.title?.["#text"]||e.title||""; const link=(Array.isArray(e.link)?e.link[0]?.["@_href"]:e.link?.["@_href"])||e.id; const updated=e.updated||e.published||new Date().toISOString(); const form=parseTitleForForm(title); if(!form||!FORMS.has(form)) continue; const exists=await prisma.article.findUnique({where:{url:link}}); if(exists) continue; const summary=e.summary?.["#text"]||e.summary||null; const article=await prisma.article.create({data:{sourceId:source.id,url:link,title,publishedAt:new Date(updated),summary,rawText:summary}}); const workerUrl=process.env.WORKER_URL||"http://localhost:8000/enrich"; await fetch(workerUrl,{method:"POST",headers:{"content-type":"application/json","x-api-key":process.env.WORKER_API_KEY||""}, body:JSON.stringify({article_id:String(article.id)})}); console.log("EDGAR stored:",title); }catch(err){ console.error("EDGAR entry error:",err);} } }
main().finally(async()=>prisma.$disconnect());
